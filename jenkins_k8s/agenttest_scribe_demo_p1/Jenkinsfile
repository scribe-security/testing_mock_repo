def Agent_snapshot(String name) {
    withCredentials([usernamePassword(credentialsId: 'scribe-backend-auth0-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD'),
                     usernamePassword(credentialsId: 'scribe-aws-cred-id', usernameVariable: 'AWS_AKID', passwordVariable: 'AWS_SECRET')]) {
      def out_data = sh(script: """agent snapshot -r=true  -vv -u ${params.SCRIBE_URL} -n ${name} -U ${USERNAME} -P ${PASSWORD} \
      --log.cloudwatch.enable=true \
      --log.cloudwatch.AKID=${AWS_AKID} \
      --log.cloudwatch.secret=${AWS_SECRET} \
       --snapshot.file.enable=false \
       --snapshot.bomber.enable=true \
       --snapshot.bomber.hookfile=^.*.tar\$ 
      """,returnStdout: true)
      println out_data
    }
}


pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins_k8s/agenttest_scribe_demo_p1/KubernetesPod.yaml'
    }
  }
  
  parameters {
      gitParameter(name: 'BRANCH_NAME',
          branchFilter: 'origin/(.*)',
          selectedValue: 'NONE',
          defaultValue: 'master',
          type: 'PT_BRANCH')

      string(defaultValue: 'https://api.dev.scribesecurity.com', 
        name: 'SCRIBE_URL', 
        trim: true)
  }

    environment {
        GIT_AUTHOR_NAME = 'jenkins_git_user'
        GIT_AUTHOR_EMAIL = 'jenkins_git_user@mail.com'
    }

  stages {
    stage('Python') {
      steps {
        container('python') {
            sh '''#!/bin/bash 
            set -x
            pip install virtualenv
            virtualenv venv
            source venv/bin/activate
            pip install argparse==1.3.0
            pip install pycurl'''
        }
        container('agent') {
            Agent_snapshot("Post-python")
            sh 'rm -rf venv'
          }
      }
    }
  }
}
