def Agent_snapshot(String name) {
    withCredentials([usernamePassword(credentialsId: 'scribe-backend-basic-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD'),
                     usernamePassword(credentialsId: 'client-artifactory-cred-id', usernameVariable: 'ART_USERNAME', passwordVariable: 'ART_PASSWORD')]) {
      def out_data = sh(script: """agent snapshot -r=true  -vv -u ${params.SCRIBE_URL} -n ${name} -U ${USERNAME} -P ${PASSWORD} \
       --artifactory.enable=true \
      --snapshot.artifactory.enable=true \
      --artifactory.url=https://scribesecuriy.jfrog.io/ \
      --artifactory.username=${ART_USERNAME} \
      --artifactory.password=${ART_PASSWORD} \
      --snapshot.artifactory.item.repo=scribe-testing-local
      """,returnStdout: true)
      println out_data
    }
}


// go run main.go snapshot -vv --artifactory.username=mikey@scribesecurity.com --artifactory.password=Iamhipster3# --artifactory.url=https://scribesecuriy.jfrog.io/   --snapshot.file.enable=false --snapshot.git.enable=false --snapshot.artifactory.enable=true --artifactory.enable=true --snapshot.artifactory.item.lastminutes=100000 --snapshot.artifactory.item.lastseconds=0  -vv --snapshot.artifactory.item.name=* --snapshot.artifactory.item.repo=scribe-docker-local
// [4] 0:bash*                                                                                                            

pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins_k8s/agenttest/KubernetesPod.yaml'
    }
  }
  
  parameters {
      gitParameter(name: 'BRANCH_NAME',
          branchFilter: 'origin/(.*)',
          selectedValue: 'NONE',
          defaultValue: 'master',
          type: 'PT_BRANCH')

      string(defaultValue: 'https://api.dev.scribesecurity.com', 
        name: 'SCRIBE_URL', 
        trim: true)
  }

    environment {
        GIT_AUTHOR_NAME = 'jenkins_git_user'
        GIT_AUTHOR_EMAIL = 'jenkins_git_user@mail.com'
    }

  stages {
    stage('Kaniko-push') {
      steps {
          withCredentials([usernamePassword(credentialsId: 'client-artifactory-cred-id', usernameVariable: 'ART_USERNAME', passwordVariable: 'ART_PASSWORD')]) {
                    sh 'jenkins_k8s/scripts/kaniko_config.sh $ART_USERNAME $ART_PASSWORD'
                    sh 'ls -lh'
                    }

        container(name: 'kaniko', shell: '/busybox/sh') {
           sh """
            #!/busybox/sh
            set -x
            echo "FROM jenkins/inbound-agent:latest" > Dockerfile
            /kaniko/executor -h                                                                                                                
            /kaniko/executor  -v `pwd`/config.json:/kaniko/.docker/config.json:ro -f `pwd`/Dockerfile --verbosity debug -c `pwd` --destination=scribesecuriy.jfrog.io/scribe-testing-local/testing:latest
            """
        }
      }
    }
    stage('Busybox') {
       steps {
        container('busybox') {
            sh 'echo BUSYBOX_CONTAINER_ENV_VAR = ${CONTAINER_ENV_VAR}'
            // sh 'help'
            sh 'echo test > README.md'
            sh 'echo test > some_stage_create_file.txt'
          }
        container('agent') {
          Agent_snapshot("Post-Busybox")
        }        
      }
    }
    // stage('Maven') {
    //   steps {
    //     container('maven') {
    //       sh 'mvn -version'
    //       sh 'mvn -B -DskipTests -f jenkins_k8s/external/simple-java-maven-app/pom.xml clean package'
    //     }
    //     container('agent') {
    //       Agent_snapshot("Post-maven")
    //     }
    //   }
    // }
    stage('Git') {
      steps {
        container('git') {
            sh 'git version'
            script {
                  env.GIT_TEST_VARIABLE = "some git stage test value"
            }
            sh "git config --global user.name ${env.GIT_AUTHOR_NAME}"
            sh "git config --global user.email ${env.GIT_AUTHOR_EMAIL}"
            sh '''echo test2 > some_stage_create_file.txt            
            git add some_stage_create_file.txt
            git commit -m "Added some file some_stage_create_file.txt"'''
        }
        container('agent') {
          Agent_snapshot("Post-git")
        }
      }
    }
    stage('Node') {
       steps {
        container('node12') {
            sh 'whoami'
            sh 'hostname -i'
            sh '''#!/bin/bash 
            set -x
            cd jenkins_k8s/external/simple-hello-world-example-npm/
            npm i'''
        }
        container('agent') {
          Agent_snapshot("Post-node")
         }
       }
    }
    stage('Kaniko') {
      steps {
        container(name: 'kaniko', shell: '/busybox/sh') {
           sh '''#!/busybox/sh
            set -x
            echo "FROM jenkins/inbound-agent:latest" > Dockerfile
            /kaniko/executor -f `pwd`/Dockerfile --verbosity debug -c `pwd` --insecure --skip-tls-verify --cache=false --destination=image --no-push --tarPath=`pwd`/jenkins_inbound-agent.tar
          '''
        }
        container('agent') {
          Agent_snapshot("Post-kaniko")
        }
      }
    }
  }
}