def Agent_snapshot(String name) {
    withCredentials([usernamePassword(credentialsId: 'scribe-backend-basic-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
      def out_data = sh(script: """agent snapshot -r=true  -vv -u ${params.SCRIBE_URL} -n ${name} -U ${USERNAME} -P ${PASSWORD} \
       --snapshot.file.enable=false \
       --snapshot.bomber.enable=true \
       --snapshot.bomber.hookfile=^.*.tar\$
      """,returnStdout: true)
      println out_data
    }
}

pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins_k8s/agenttest_bomber/KubernetesPod.yaml'
    }
  }
  
  parameters {
      gitParameter(name: 'BRANCH_NAME',
          branchFilter: 'origin/(.*)',
          selectedValue: 'NONE',
          defaultValue: 'master',
          type: 'PT_BRANCH')

      string(defaultValue: 'https://api.dev.scribesecurity.com', 
        name: 'SCRIBE_URL', 
        trim: true)
  }

    environment {
        GIT_AUTHOR_NAME = 'jenkins_git_user'
        GIT_AUTHOR_EMAIL = 'jenkins_git_user@mail.com'
    }

  stages {
    // stage('Kaniko') {
    //   steps {
    //     container(name: 'kaniko', shell: '/busybox/sh') {
    //        sh '''#!/busybox/sh
    //         set -x
    //         echo "FROM busybox:latest" > Dockerfile
    //         /kaniko/executor -f `pwd`/Dockerfile --verbosity debug -c `pwd` --insecure --skip-tls-verify --cache=false --destination=image --no-push --tarPath=`pwd`/jenkins_inbound-agent.tar
    //       '''
    //     }
    //     container('agent') {
    //       Agent_snapshot("Post-kaniko")
    //     }
    //   }
    // }
    stage('Golang') {
      steps {
        container('golang') {
            sh '''#!/bin/bash 
            set -x
            GOPATH=$(pwd)
            go get github.com/spf13/viper'''
        }
        container('agent') {
          Agent_snapshot("Post-golang")
          }
      }
    }
    // stage('Python') {
    // steps {
    //   container('python') {
    //       sh '''#!/bin/bash 
    //       set -x
    //       pip install virtualenv
    //       virtualenv venv
    //       source venv/bin/activate
    //       pip install argparse'''
    //   }
    //   container('agent') {
    //     Agent_snapshot("Post-python")
    //     }
    //   }
    // }
    // stage('Node') {
    // steps {
    //   container('node12') {
    //       sh '''#!/bin/bash 
    //       set -x
    //       cd jenkins_k8s/external/simple-hello-world-example-npm/
    //       npm i'''
    //   }
    //   container('agent') {
    //     Agent_snapshot("Post-node")
    //     }
    //   }
    // }
  }
}
